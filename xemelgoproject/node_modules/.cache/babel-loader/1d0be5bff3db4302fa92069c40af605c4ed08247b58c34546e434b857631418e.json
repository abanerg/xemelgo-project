{"ast":null,"code":"var _jsxFileName = \"/Users/abanerjee/Desktop/Code/xemelgoproject/src/App.js\";\nimport { useState, useEffect } from 'react';\nimport React, { Component } from 'react';\nimport LogInPage from './LogInPage';\nimport \"./App.css\";\nimport Button from 'react-bootstrap/ToggleButton';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst serverRoot = \"http://localhost:3300\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: true,\n      currentUserId: null,\n      managerStatus: null\n    };\n  }\n  async onClick() {\n    try {\n      let response = await axios.get(serverRoot + \"/manager/employee-list/\");\n      console.log(response);\n    } catch (e) {\n      alert(\"Server is not running.\");\n    }\n  }\n  render() {\n    if (!this.state.loggedIn) {\n      /*#__PURE__*/_jsxDEV(LogInPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Logged In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n}\nexport default App;","map":{"version":3,"names":["useState","useEffect","React","Component","LogInPage","Button","axios","serverRoot","App","constructor","props","state","loggedIn","currentUserId","managerStatus","onClick","response","get","console","log","e","alert","render"],"sources":["/Users/abanerjee/Desktop/Code/xemelgoproject/src/App.js"],"sourcesContent":["\nimport {useState, useEffect} from 'react';\nimport React, {Component} from 'react';\nimport LogInPage from './LogInPage';\nimport \"./App.css\"\nimport Button from 'react-bootstrap/ToggleButton';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst serverRoot = \"http://localhost:3300\";\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          loggedIn: true,\n          currentUserId: null,\n          managerStatus: null\n      }\n    }\n    async onClick() { \n      try {\n        let response = await axios.get(serverRoot+\"/manager/employee-list/\");\n        console.log(response)\n      }\n      catch(e) {\n        alert(\"Server is not running.\");\n      }\n    }\n    render () {\n      if (!this.state.loggedIn) {\n        <LogInPage />\n      }\n      else {\n        return (\n          <>\n          <h1>Logged In</h1>\n          </>\n          );\n      }\n    }\n}\n\nexport default App;\n"],"mappings":";AACA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAAC;AAAA;AAE9C,MAAMC,UAAU,GAAG,uBAAuB;AAE1C,MAAMC,GAAG,SAASL,SAAS,CAAC;EACxBM,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE,IAAI;MACnBC,aAAa,EAAE;IACnB,CAAC;EACH;EACA,MAAMC,OAAO,GAAG;IACd,IAAI;MACF,IAAIC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACV,UAAU,GAAC,yBAAyB,CAAC;MACpEW,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACvB,CAAC,CACD,OAAMI,CAAC,EAAE;MACPC,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF;EACAC,MAAM,GAAI;IACR,IAAI,CAAC,IAAI,CAACX,KAAK,CAACC,QAAQ,EAAE;MACxB,qBAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IACf,CAAC,MACI;MACH,oBACE;QAAA,uBACA;UAAA,UAAI;QAAS;UAAA;UAAA;UAAA;QAAA;MAAK,iBACf;IAEP;EACF;AACJ;AAEA,eAAeJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}